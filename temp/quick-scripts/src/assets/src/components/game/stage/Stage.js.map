{"version":3,"sources":["assets\\src\\components\\game\\stage\\Stage.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { Player } from \"./Player\";\r\nimport { Block } from \"./Block\";\r\nimport { G } from \"../../../G\";\r\nimport { PlayerDieEvent } from \"../../../events/PlayerDieEvent\";\r\nimport { PlayerJumpSuccessEvent } from \"../../../events/PlayerJumpSuccessEvent\";\r\nimport * as global from \"../../../GlobalData\";\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class Stage extends cc.Component {\r\n    @property(cc.Boolean)\r\n    public autoJump: boolean = true;\r\n\r\n    @property(Number)\r\n    private failChance: Number = 0;\r\n    @property(Player)\r\n    private player: Player = null;\r\n    public playerDie = false;\r\n    @property(cc.Vec2)\r\n    public leftOrigin: cc.Vec2 = cc.v2();\r\n    @property(cc.Vec2)\r\n    public rightOrigin: cc.Vec2 = cc.v2();\r\n    @property(cc.Node)\r\n    public blockLayer: cc.Node = null;\r\n    @property(cc.Node)\r\n    public propLayer: cc.Node = null;\r\n    @property(cc.Node)\r\n    public bg: cc.Node = null;\r\n    @property(cc.Node)\r\n    public loadingLayer: cc.Node = null;\r\n    @property(cc.Node)\r\n    public blockInputLayer: cc.Node = null;\r\n    @property(cc.Node)\r\n    public insufficient: cc.Node = null;\r\n    @property(cc.Float)\r\n    public arrayRatio: number = 0.556047197640118;\r\n    @property\r\n    public canJump = true;\r\n    @property([cc.Prefab])\r\n    private greenblockList: Array<cc.Prefab> = [];\r\n    @property([cc.Prefab])\r\n    private orangeblockList: Array<cc.Prefab> = [];\r\n    @property([cc.Prefab])\r\n    private purpleblockList: Array<cc.Prefab> = [];\r\n    @property(cc.Prefab)\r\n    private grassPropList: cc.Prefab = null;\r\n    @property(cc.Prefab)\r\n    private desertPropList: cc.Prefab = null;\r\n    @property(cc.Prefab)\r\n    private purplePropList: cc.Prefab = null;\r\n    @property(cc.Label)\r\n    private balanceText: cc.Label = null;\r\n    @property(cc.Label)\r\n    private winAmountText: cc.Label = null;\r\n    public winAmount = 0;\r\n    public perfect =0;\r\n    public singleMax =0;\r\n    private currBlock: Block = null;\r\n    public totalBet=0;\r\n    private nextBlock: Block = null;\r\n    private currentValue = 0;\r\n    @property(cc.AudioClip)\r\n    private readyJumpAudio = null;\r\n    private readyJumpAudioId = -1;\r\n    private generatingBalance = false;\r\n    private generatingScore =false;\r\n    timerforLoading=0;\r\n    public reset() {\r\n        this.blockLayer.removeAllChildren();\r\n\r\n        // 添加第一个方块\r\n        this.addScore(0);\r\n        let blockNode = cc.instantiate(this.greenblockList[5]);\r\n        this.blockLayer.addChild(blockNode);\r\n        let block = blockNode.getComponent(Block);\r\n        block.closePerfectScore();\r\n        blockNode.position = this.blockLayer.parent.convertToNodeSpaceAR(this.leftOrigin);\r\n\r\n        this.currBlock = block;\r\n        this.nextBlock = block;\r\n        this.player.node.position = this.node.parent.convertToNodeSpaceAR(this.currBlock.getCenterPosition());\r\n\r\n        this.addBlock();\r\n\r\n        //this.addProp();\r\n\r\n    }\r\n\r\n    public enableTouch() {\r\n        cc.find(\"Canvas\").on(cc.Node.EventType.TOUCH_START, this.onReadyJump, this);\r\n        cc.find(\"Canvas\").on(cc.Node.EventType.TOUCH_END, this.onJump, this);\r\n    }\r\n\r\n    public disableTouch() {\r\n        cc.find(\"Canvas\").targetOff(this);\r\n        cc.systemEvent.targetOff(this);\r\n    }\r\n\r\n\r\n    private onReadyJump() {\r\n        if(this.checkQualify()&&!this.autoJump){\r\n            this.player.readyJump();\r\n        }\r\n        else{\r\n\r\n        }\r\n    }\r\n\r\n    private addScore(value){\r\n    //    // global.setBalance(global.getBalance() + value);\r\n    //     this.balanceText.string = (Math.round(global.getBalance()*10)/10).toString();\r\n\r\n         this.winAmountText.string =(Math.round((this.winAmount + value)*10)/10).toString();\r\n         this.winAmount +=value;\r\n    }\r\n\r\n    private updateBalance(){\r\n        this.balanceText.string = (Math.round(global.settings.balance*10)/10).toString();\r\n    }\r\n    public addTotalBet(value){\r\n        this.totalBet+=value;\r\n    }\r\n    public checkQualify(){\r\n        if(global.settings.balance>=cc.find(\"Canvas/InGameBetting\").getComponent(\"InGameBetting\").currentBetting){\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n    private onJump() {\r\n\r\n        if(!this.autoJump){\r\n            this.blockInputLayer.active = true;\r\n            let jumpDistance = this.player.jumpDistance;\r\n            let dir = this.player.direction;\r\n            let targetPos = new cc.Vec2(this.player.node.x + jumpDistance * dir, this.player.node.y + jumpDistance * this.arrayRatio);\r\n            let targetWorldPos = this.player.node.parent.convertToWorldSpaceAR(targetPos);\r\n            let formatPos = this.nextBlock.getAnchorLocation(targetWorldPos, dir,global.platform);\r\n            this.addTotalBet(cc.find(\"Canvas/InGameBetting\").getComponent(\"InGameBetting\").currentBetting);\r\n            if (formatPos !== null) {\r\n                this.player.jumpTo(formatPos, () => {\r\n                    this.currBlock = this.nextBlock;\r\n                    //this.currBlock.playScoreAnim();\r\n                    this.addScore(this.currBlock.trueScore);\r\n                    if(this.currBlock.trueScore>this.singleMax){\r\n                        this.singleMax = this.currBlock.trueScore;\r\n                    }\r\n                    if(global.platform==1){\r\n                        this.perfect++;\r\n                    }\r\n                    cc.find(\"score\",this.player.node).getComponent(cc.Label).string = \"+\"+Math.round(this.currBlock.trueScore*10)/10;\r\n                    cc.find(\"score\",this.player.node).getComponent(cc.Animation).play();\r\n                    //this.currBlock.stopAllAction(this.player.platformState);\r\n                    G.dispatchEvent(new PlayerJumpSuccessEvent(this.currBlock.score));\r\n                    if(this.checkQualify()){\r\n\r\n                        if(!global.isDemo){\r\n                            var emit_result = {\r\n                                'host_id':global.host_id,\r\n                                'access_token': global.access_token,\r\n                                'ticket_id': global.ticket_id,\r\n                                'result': this.currBlock.trueScore,\r\n                                'key': \"Change bet: \" + cc.find(\"Canvas/InGameBetting\").getComponent(\"InGameBetting\").currentBetting,\r\n                                'game_code': global.game_code,\r\n                                'description': \"Get previous bet and change bet\",\r\n                                'user_id': global.settings.user_id,\r\n                                'api_url':global.api_url,\r\n                                \"changeBet\":false,\r\n\r\n                            };\r\n                            if(global.isEncrypt){\r\n                                global.getSocket().emit('send-result', btoa(JSON.stringify(emit_result)));\r\n                            }\r\n                            else{\r\n                                global.getSocket().emit('send-result', emit_result);\r\n                            }\r\n                            this.generatingBalance = true;\r\n                        }\r\n                        else{\r\n                            global.settings.balance+= this.currBlock.trueScore;\r\n                            this.generatingBalance = true;\r\n                        }\r\n                        this.loadingLayer.opacity = 0;\r\n                        this.loadingLayer.active=true;\r\n                        this.timerforLoading=0;\r\n                    }\r\n                    else{\r\n                        this.insufficient.active = true;\r\n                    }\r\n\r\n                });\r\n            } else {\r\n                this.player.jumpTo(targetWorldPos, () => {\r\n                    this.playerDie = true;\r\n                    cc.find(\"Canvas/AudioManager\").getComponent(\"AudioManager\").playLoseSound();\r\n                    var action =  cc.rotateBy(0.2,-90);\r\n\r\n                    if(!global.isDemo){\r\n                        var emit_result = {\r\n                            'host_id':global.host_id,\r\n                            'access_token': global.access_token,\r\n                            'ticket_id': global.ticket_id,\r\n                            'result': 0,\r\n                            'key': \"Change bet: \" + cc.find(\"Canvas/InGameBetting\").getComponent(\"InGameBetting\").currentBetting,\r\n                            'game_code': global.game_code,\r\n                            'description': \"Get previous bet and change bet\",\r\n                            'user_id': global.settings.user_id,\r\n                            'api_url':global.api_url,\r\n                            \"changeBet\":false,\r\n\r\n                        };\r\n                        if(global.isEncrypt){\r\n                            global.getSocket().emit('send-result', btoa(JSON.stringify(emit_result)));\r\n                        }\r\n                        else{\r\n                            global.getSocket().emit('send-result', emit_result);\r\n                        }\r\n                        this.generatingBalance = true;\r\n                    }\r\n                    else{\r\n                        global.settings.balance+=0;\r\n                        this.generatingBalance = true;\r\n                    }\r\n                    this.loadingLayer.opacity = 0;\r\n                    this.loadingLayer.active=true;\r\n                    this.timerforLoading=0;\r\n                    this.player.node.runAction(action);\r\n                    this.blockInputLayer.active = false;\r\n\r\n\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    public addProp(value,position){\r\n\r\n        var propNode;\r\n        this.currentValue = value;\r\n        if(value>=4 &&value<=7){\r\n            propNode = cc.instantiate(this.desertPropList);\r\n\r\n        }\r\n        else if(value>=8&&value<=12){\r\n            propNode = cc.instantiate(this.purplePropList);\r\n        }\r\n        else{\r\n            propNode = cc.instantiate(this.grassPropList);\r\n        }\r\n        this.propLayer.addChild(propNode);\r\n        propNode.y = position;\r\n        // let scale = block.minScale + Math.random() * (block.maxScale - block.minScale);\r\n\r\n    }\r\n\r\n    RandomInt(min, max){\r\n        return min + Math.random() * (max -min);\r\n    }\r\n\r\n    public addBlock() {\r\n        let n ;\r\n        let blockNode ;\r\n        if(this.currentValue>=4 &&this.currentValue<=7){\r\n\r\n            n = Math.floor(Math.random() * this.orangeblockList.length);\r\n            blockNode = cc.instantiate(this.orangeblockList[n]);\r\n        }\r\n        else if(this.currentValue>=8&&this.currentValue<=12){\r\n            n = Math.floor(Math.random() * this.purpleblockList.length)\r\n            blockNode = cc.instantiate(this.purpleblockList[n]);\r\n        }\r\n        else{\r\n            n = Math.floor(Math.random() * this.greenblockList.length)\r\n            blockNode = cc.instantiate(this.greenblockList[n]);\r\n        }\r\n\r\n\r\n        this.blockLayer.addChild(blockNode);\r\n        let block = blockNode.getComponent(Block);\r\n        let scale = block.minScale + Math.random() * (block.maxScale - block.minScale);\r\n        //let scale = 1;\r\n       // let distance = block.minDistance + Math.random() * (block.maxDistance - block.minDistance);\r\n        blockNode.scale = scale;\r\n        if (this.player.direction > 0) {\r\n            blockNode.x = this.currBlock.node.x + 500;\r\n            blockNode.y = this.currBlock.node.y + 500 * this.arrayRatio;\r\n        } else {\r\n            blockNode.x = this.currBlock.node.x - 500;\r\n            blockNode.y = this.currBlock.node.y + 500 * this.arrayRatio;\r\n        }\r\n        this.currBlock = this.nextBlock;\r\n        this.nextBlock = block;\r\n        return block;\r\n\r\n    }\r\n\r\n    public removeBlock() {\r\n\r\n    }\r\n\r\n    public checkOver(): boolean {\r\n        return this.player.node.position.sub(this.currBlock.node.position).mag()> this.currBlock.node.width / 2 * this.currBlock.node.scale;\r\n    }\r\n\r\n    public updateStage(cb:Function,cbTarget?:any) {\r\n        let moveVector;\r\n        let playerWorldPos = this.player.node.parent.convertToWorldSpaceAR(this.player.node.position);\r\n        if(this.player.direction > 0) {\r\n            playerWorldPos.sub(this.leftOrigin);\r\n            moveVector = playerWorldPos.sub(this.leftOrigin);\r\n        }else {\r\n            moveVector = playerWorldPos.sub(this.rightOrigin);\r\n        }\r\n        let finished = cc.callFunc(cb, cbTarget);\r\n        let action = cc.sequence(cc.moveTo(0.7,this.node.position.sub(moveVector)),finished);\r\n        this.bg.runAction(cc.moveTo(0.7,cc.v2(0,this.node.position.sub(moveVector).y)));\r\n        this.node.runAction(action);\r\n    }\r\n\r\n    demoGenerateScore(){\r\n        this.loadingLayer.active = false;\r\n        var multiplierPerfect;\r\n        var multiplierConso;\r\n        var platform;\r\n        var perfectScore;\r\n        var consoleScore;\r\n        // calculate multiplier\r\n        platform =   (Math.random() * (1 - 0) + 0);\r\n        if(platform>=0.4){\r\n            platform=1;\r\n        }\r\n        multiplierPerfect = (Math.random() * (10 - 2) + 2);\r\n        multiplierConso = 0.2;\r\n        perfectScore = (cc.find(\"Canvas/InGameBetting\").getComponent(\"InGameBetting\").currentBetting * Math.floor(multiplierPerfect));\r\n        consoleScore = Math.round((cc.find(\"Canvas/InGameBetting\").getComponent(\"InGameBetting\").currentBetting  * multiplierConso) * 10) / 10;\r\n        global.consoScore = consoleScore;\r\n        global.perfectScore = perfectScore;\r\n        global.platform = platform;\r\n        this.balanceText.string = (Math.round(global.settings.balance*100)/100).toString();\r\n    }\r\n    update(dt){\r\n        if(this.autoJump){\r\n            this.onAutoJump();\r\n        }\r\n\r\n        if(this.timerforLoading>=2){\r\n            this.loadingLayer.opacity=255;\r\n        }\r\n\r\n        if(this.generatingBalance){\r\n            this.timerforLoading+=dt;\r\n            if(!global.isDemo){\r\n                if(global.finishGeneratingBalance){\r\n                    this.generatingBalance = false;\r\n                    global.finishGeneratingBalance = false;\r\n                    var emit_obj = {\r\n                        'host_id':global.host_id,\r\n                        'access_token': global.access_token,\r\n                        'game_code': 23,\r\n                        'betAmount': cc.find(\"Canvas/InGameBetting\").getComponent(\"InGameBetting\").currentBetting,\r\n                        \"key\": \"Happy Jump bet with these index 1st\",\r\n                        \"description\": \"bet\",\r\n                        \"user_id\": global.settings.user_id,\r\n                        'api_url':global.api_url,\r\n                        \"requestType\": \"bet\",\r\n                        \"currentBetSlot\":global.currentBetSlot,\r\n\r\n                    }\r\n                    cc.find(\"Canvas/InGameBetting\").getComponent(\"InGameBetting\").playerDie=this.playerDie;\r\n                    if(!this.playerDie){\r\n                        if(global.isEncrypt){\r\n                            global.getSocket().emit('changeBet', btoa(JSON.stringify(emit_obj)));\r\n                        }\r\n                        else{\r\n                            global.getSocket().emit('changeBet', emit_obj);\r\n                        }\r\n                        this.generatingScore = true;\r\n                    }\r\n                    else{\r\n                        this.loadingLayer.active=false;\r\n                        G.dispatchEvent(new PlayerDieEvent());\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.generatingBalance = false;\r\n                cc.find(\"Canvas/InGameBetting\").getComponent(\"InGameBetting\").playerDie = this.playerDie;\r\n                if (!this.playerDie) {\r\n                    global.settings.balance -= cc.find(\"Canvas/InGameBetting\").getComponent(\"InGameBetting\").currentBetting;\r\n                    this.generatingScore = true;\r\n                }\r\n                else {\r\n                    this.loadingLayer.active = false;\r\n                    G.dispatchEvent(new PlayerDieEvent());\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if(this.generatingScore){\r\n            this.timerforLoading+=dt;\r\n            if(!global.isDemo){\r\n                if(global.finishGetData){\r\n                    this.generatingScore = false;\r\n                    global.finishGetData =false;\r\n                    this.scheduleOnce(function(){\r\n                        this.emitChangebet();\r\n                    },1);\r\n\r\n                }\r\n            }\r\n            else{\r\n                this.demoGenerateScore();\r\n                this.emitChangebet();\r\n                this.generatingScore = false;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    emitChangebet(){\r\n         this.updateStage(()=>{\r\n            this.addBlock();\r\n            cc.systemEvent.emit(\"Change-Bet\");\r\n        });\r\n        this.loadingLayer.active = false;\r\n        this.blockInputLayer.active = false;\r\n        this.canJump= true;\r\n        this.updateBalance();\r\n\r\n\r\n    }\r\n\r\n    private onAutoJump() {\r\n        if(this.checkQualify()&&this.autoJump){\r\n            if(this.canJump){\r\n                this.player.node.getComponent(cc.Animation).play(\"ChickenCharge\");\r\n                cc.find(\"rotateAnchor/particlesystem\",this.player.node).active = true;\r\n                cc.find(\"Canvas/AutoJumpManager\").getComponent(\"AutojumpManager\").updateJumpTimes();\r\n                this.readyJumpAudioId = cc.audioEngine.play(this.readyJumpAudio,false,global.getEffectVolume());\r\n                this.canJump=false;\r\n                this.scheduleOnce(function(){\r\n                    cc.audioEngine.stop(this.readyJumpAudioId);\r\n                    this.addTotalBet(cc.find(\"Canvas/InGameBetting\").getComponent(\"InGameBetting\").currentBetting);\r\n                    let fail = this.RandomInt(0, 100);\r\n                    let jumpDistance = 460 + Math.random() * (520 -460);\r\n                    if(fail<=this.failChance){\r\n                        jumpDistance = this.RandomInt(300,380);\r\n                    }\r\n                   let randomPerfect = 0;\r\n                   if(global.platform == 1 ){\r\n                        global.platform=1;\r\n                   }\r\n                    let dir = this.player.direction;\r\n                    let targetPos = new cc.Vec2(this.player.node.x + jumpDistance * dir, this.player.node.y + jumpDistance * this.arrayRatio);\r\n                    let targetWorldPos = this.player.node.parent.convertToWorldSpaceAR(targetPos);\r\n                    let formatPos = this.nextBlock.getAnchorLocation(targetWorldPos, dir,global.platform);\r\n                    if (formatPos !== null) {\r\n                        this.player.jumpTo(formatPos, () => {\r\n                            this.currBlock = this.nextBlock;\r\n                            //this.currBlock.playScoreAnim();\r\n                            this.addScore(this.currBlock.trueScore);\r\n                            if(this.currBlock.trueScore>this.singleMax){\r\n                                this.singleMax = this.currBlock.trueScore;\r\n                            }\r\n                            if(global.platform==1){\r\n                                this.perfect++;\r\n                            }\r\n\r\n                            cc.find(\"score\",this.player.node).getComponent(cc.Label).string = \"+\"+Math.round(this.currBlock.trueScore*10)/10;\r\n                            cc.find(\"score\",this.player.node).getComponent(cc.Animation).play();\r\n                            //this.currBlock.stopAllAction(this.player.platformState);\r\n                            G.dispatchEvent(new PlayerJumpSuccessEvent(this.currBlock.score));\r\n                            if(this.checkQualify()){\r\n                                if(!global.isDemo){\r\n                                    var emit_result = {\r\n                                        'host_id':global.host_id,\r\n                                        'access_token': global.access_token,\r\n                                        'ticket_id': global.ticket_id,\r\n                                        'result': this.currBlock.trueScore,\r\n                                        'key': \"Change bet: \" + cc.find(\"Canvas/InGameBetting\").getComponent(\"InGameBetting\").currentBetting,\r\n                                        'game_code': global.game_code,\r\n                                        'description': \"Get previous bet and change bet\",\r\n                                        'user_id': global.settings.user_id,\r\n                                        \"changeBet\":false,\r\n\r\n                                    };\r\n                                    if (global.isEncrypt) {\r\n                                        global.getSocket().emit('send-result', btoa(JSON.stringify(emit_result)));\r\n                                    }\r\n                                    else {\r\n                                        global.getSocket().emit('send-result', emit_result);\r\n                                    }\r\n                                }\r\n                                else{\r\n                                    global.settings.balance+=this.currBlock.trueScore;\r\n                                }\r\n                                this.loadingLayer.opacity = 0;\r\n                                this.loadingLayer.active=true;\r\n                                this.timerforLoading=0;\r\n\r\n                                this.generatingBalance = true;\r\n                            }\r\n                            else{\r\n                                this.insufficient.active = true;\r\n                            }\r\n\r\n\r\n                        });\r\n                    } else {\r\n                        this.player.jumpTo(targetWorldPos, () => {\r\n                            this.playerDie = true;\r\n                            cc.find(\"Canvas/AudioManager\").getComponent(\"AudioManager\").playLoseSound();\r\n                            var action =  cc.rotateBy(0.2,-90);\r\n                            this.player.node.runAction(action);\r\n                            if(!global.isDemo){\r\n                                var emit_result = {\r\n                                    'host_id':global.host_id,\r\n                                    'access_token': global.access_token,\r\n                                    'ticket_id': global.ticket_id,\r\n                                    'result': 0,\r\n                                    'key': \"Change bet: \" + cc.find(\"Canvas/InGameBetting\").getComponent(\"InGameBetting\").currentBetting,\r\n                                    'game_code': global.game_code,\r\n                                    'description': \"Get previous bet and change bet\",\r\n                                    'user_id': global.settings.user_id,\r\n                                    'api_url':global.api_url,\r\n                                    \"changeBet\":false,\r\n\r\n                                };\r\n                                if (global.isEncrypt) {\r\n                                    global.getSocket().emit('send-result', btoa(JSON.stringify(emit_result)));\r\n                                }\r\n                                else {\r\n                                    global.getSocket().emit('send-result', emit_result);\r\n                                }\r\n                            }\r\n                            else{\r\n                                global.settings.balance+=0;\r\n                            }\r\n                            this.loadingLayer.opacity=0;\r\n                            this.loadingLayer.active=true;\r\n                            this.generatingBalance = true;\r\n                            this.timerforLoading=0;\r\n                            cc.find(\"Canvas/overPanel\").getComponent(\"OverPanel\").isQuit = false;\r\n                            this.canJump=false;\r\n                        });\r\n                    }\r\n\r\n                },1);\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n"]}