{"version":3,"sources":["assets\\src\\InGameBetting.js"],"names":["cc","Class","Component","properties","isGenerating","myButton","type","Node","isRestarting","bettingOptionText","selectedBet","anim","Animation","loadingLayer","insufficient","balanceText","Label","hiding","currentBetting","lastBetting","playerDie","onLoad","selectedBetOption","globalData","currentBet","SetAmount","hide","play","even","value","maintBetOption","getBetSelection","myValue","i","length","getComponent","string","setBetAmount","active","settings","balance","currentBetSlot","opacity","Number","isDemo","emit_result","host_id","access_token","ticket_id","game_code","user_id","api_url","isEncrypt","btoa","JSON","stringify","getSocket","emit","generatingBalance","emit_obj","generateScore2","selectBetOption","event","canPlay","log","start","demoGenerateScore","multiplierPerfect","multiplierConso","platform","perfectScore","consoleScore","Math","random","floor","round","consoScore","toString","systemEvent","generateScore","onDestroy","update","dt","finishGetData","scheduleOnce","finishGeneratingBalance"],"mappings":"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","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\nimport * as globalData from \"GlobalData\";\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        isGenerating: false,\r\n        myButton: {\r\n            default: [],\r\n            type: [cc.Node],\r\n        },\r\n        isRestarting: false,\r\n        bettingOptionText: {\r\n            default: [],\r\n            type: [cc.Node]\r\n        },\r\n\r\n        selectedBet: {\r\n            default: [],\r\n            type: [cc.Node]\r\n        },\r\n        anim: {\r\n            default: null,\r\n            type: cc.Animation\r\n        },\r\n\r\n        // currentBettingLabel: {\r\n        //     default: null,\r\n        //     type: cc.Label,\r\n        // },\r\n\r\n        loadingLayer: {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        insufficient: {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        balanceText: {\r\n            default: null,\r\n            type: cc.Label,\r\n        },\r\n        hiding: false,\r\n        currentBetting: 0,\r\n        lastBetting: 0,\r\n        playerDie:false,\r\n\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        this.selectedBetOption = globalData.currentBet;\r\n        this.SetAmount(1);\r\n    },\r\n\r\n    hide() {\r\n        if (!this.hiding) {\r\n            this.anim.play(\"Hide\");\r\n            this.hiding = true;\r\n        }\r\n        else {\r\n            this.anim.play(\"Show\");\r\n            this.hiding = false;\r\n        }\r\n    },\r\n\r\n    SetAmount(even, value) {\r\n        this.maintBetOption = globalData.getBetSelection();\r\n        if (this.maintBetOption == 0) {\r\n            this.myValue = 1;\r\n        }\r\n        if (this.maintBetOption == 1) {\r\n            this.myValue = 5;\r\n\r\n        }\r\n        if (this.maintBetOption == 2) {\r\n            this.myValue = 10;\r\n        }\r\n        if (this.maintBetOption == 3) {\r\n            this.myValue = 20;\r\n        }\r\n        for (let i = 0; i < this.bettingOptionText.length; i++) {\r\n            if (i == 0) {\r\n                this.bettingOptionText[i].getComponent(cc.Label).string = ((1 * this.myValue));\r\n            }\r\n            else if (i == 1) {\r\n                this.bettingOptionText[i].getComponent(cc.Label).string = ((1 * this.myValue)) * 2;\r\n            }\r\n            else if (i == 2) {\r\n                this.bettingOptionText[i].getComponent(cc.Label).string = ((1 * this.myValue)) * 3;\r\n            }\r\n            else {\r\n                this.bettingOptionText[i].getComponent(cc.Label).string = ((1 * this.myValue) / (this.bettingOptionText.length - i)) * 10;\r\n            }\r\n        }\r\n\r\n        if (this.selectedBetOption < 3) {\r\n            this.currentBetting = ((1 * this.myValue)) * (this.selectedBetOption + 1);\r\n        }\r\n        else {\r\n            this.currentBetting = ((1 * this.myValue) / (this.bettingOptionText.length - this.selectedBetOption)) * 10;\r\n        }\r\n\r\n        globalData.setBetAmount(this.currentBetting);\r\n        for (let i = 0; i < this.selectedBet.length; i++) {\r\n            if (i == this.selectedBetOption) {\r\n                this.selectedBet[i].active = false;\r\n                // this.myButton[i].scale = cc.v2(0.9, 0.9);\r\n\r\n            } else {\r\n                this.selectedBet[i].active = true;\r\n                // this.myButton[i].scale = cc.v2(0.7, 0.7);\r\n\r\n            }\r\n        }\r\n\r\n        if (this.lastBetting != this.currentBetting) {\r\n            if (globalData.settings.balance + this.lastBetting >= this.currentBetting) {\r\n                globalData.currentBetSlot=this.selectedBetOption;\r\n                // this.currentBettingLabel.string = this.currentBetting;\r\n                //eligible for betting;\r\n                this.loadingLayer.opacity = 255;\r\n                this.loadingLayer.active = true;\r\n                if (Number(value) == 0) {\r\n\r\n                    if (!globalData.isDemo) {\r\n                        var emit_result = {\r\n                            'host_id': globalData.host_id,\r\n                            'access_token': globalData.access_token,\r\n                            'ticket_id': globalData.ticket_id,\r\n                            'result': this.lastBetting,\r\n                            'key': \"Change bet: \" + this.lastBetting,\r\n                            'game_code': globalData.game_code,\r\n                            'description': \"Get previous bet and change bet\",\r\n                            'user_id': globalData.settings.user_id,\r\n                            'api_url':globalData.api_url,\r\n                            'changeBet':true,\r\n\r\n                        };\r\n                        if(globalData.isEncrypt){\r\n                            emit_result = btoa(JSON.stringify(emit_result));\r\n                        }\r\n                        globalData.getSocket().emit('send-result', emit_result);\r\n                        this.generatingBalance = true;\r\n                        this.lastBetting = this.currentBetting;\r\n                    }\r\n                    else {\r\n                        globalData.settings.balance += this.lastBetting;\r\n                        this.generatingBalance = true;\r\n                        this.lastBetting = this.currentBetting;\r\n                    }\r\n\r\n                }\r\n\r\n                else {\r\n                    this.lastBetting = this.currentBetting;\r\n                    this.insufficient.active = false;\r\n                    if (!globalData.isDemo) {\r\n                        var emit_obj = {\r\n                            'host_id': globalData.host_id,\r\n                            'access_token': globalData.access_token,\r\n                            'game_code': 23,\r\n                            'betAmount': this.currentBetting,\r\n                            \"key\": \"Happy Jump bet with these index 1st\",\r\n                            \"description\": \"bet\",\r\n                            \"user_id\": globalData.settings.user_id,\r\n                            'api_url':globalData.api_url,\r\n                            \"requestType\": \"bet\",\r\n                            \"currentBetSlot\":globalData.currentBetSlot,\r\n                        }\r\n                        if(globalData.isEncrypt){\r\n                            emit_obj = btoa(JSON.stringify(emit_obj));\r\n                        }\r\n                        globalData.getSocket().emit('changeBet', emit_obj);\r\n                        this.generateScore2();\r\n                    }\r\n                    else {\r\n                        globalData.settings.balance -= this.currentBetting;\r\n                        this.generateScore2();\r\n                    }\r\n\r\n                }\r\n            }\r\n            else {\r\n                this.insufficient.active = true;\r\n\r\n            }\r\n        }\r\n\r\n        else {\r\n\r\n        }\r\n\r\n    },\r\n\r\n\r\n    selectBetOption(event, value) {\r\n        this.selectedBetOption = Number(value);\r\n        //this.lastBetting = this.currentBetting;\r\n\r\n        this.canPlay = true;\r\n        // this.node.active = false;\r\n        cc.log(\"Selected bet option:\" + this.selectedBetOption);\r\n        for (let i = 0; i < this.selectedBet.length; i++) {\r\n            if (i == value) {\r\n                this.selectedBet[i].active = false;\r\n                // this.myButton[i].scale = cc.v2(0.9, 0.9);\r\n\r\n            } else {\r\n                this.selectedBet[i].active = true;\r\n                // this.myButton[i].scale = cc.v2(0.7, 0.7);\r\n\r\n            }\r\n        }\r\n\r\n        if (this.selectedBetOption < 3) {\r\n            this.currentBetting = ((1 * this.myValue)) * (this.selectedBetOption + 1);\r\n        }\r\n        else {\r\n            this.currentBetting = ((1 * this.myValue) / (this.bettingOptionText.length - this.selectedBetOption)) * 10;\r\n        }\r\n\r\n        globalData.setBetAmount(this.currentBetting);\r\n\r\n        if (this.lastBetting != this.currentBetting) {\r\n            if (globalData.settings.balance + this.lastBetting >= this.currentBetting) {\r\n                //eligible for betting;\r\n                globalData.currentBetSlot=this.selectedBetOption;\r\n                globalData.currentBet = Number(value);\r\n                // this.currentBettingLabel.string = this.currentBetting;\r\n                this.loadingLayer.opacity = 255;\r\n                this.loadingLayer.active = true;\r\n\r\n                if (!globalData.isDemo) {\r\n                    var emit_result = {\r\n                        'host_id': globalData.host_id,\r\n                        'access_token': globalData.access_token,\r\n                        'ticket_id': globalData.ticket_id,\r\n                        'result': this.lastBetting,\r\n                        'key': \"Change bet: \" + this.lastBetting,\r\n                        'game_code': globalData.game_code,\r\n                        'description': \"Get previous bet and change bet\",\r\n                        'user_id': globalData.settings.user_id,\r\n                        'api_url':globalData.api_url,\r\n                        'changeBet':true,\r\n\r\n                    };\r\n                    if(globalData.isEncrypt){\r\n                        emit_result = btoa(JSON.stringify(emit_result));\r\n                    }\r\n                    globalData.getSocket().emit('send-result', emit_result);\r\n                    this.lastBetting = this.currentBetting;\r\n                    this.generatingBalance = true;\r\n                }\r\n                else {\r\n                    globalData.settings.balance += this.lastBetting;\r\n                    this.lastBetting = this.currentBetting;\r\n                    this.generatingBalance = true;\r\n                }\r\n            }\r\n            else {\r\n                this.insufficient.active = true;\r\n            }\r\n        }\r\n        else {\r\n            if (globalData.settings.balance + this.lastBetting >= this.currentBetting) {\r\n                this.insufficient.active = false;\r\n            }\r\n        }\r\n\r\n\r\n\r\n    },\r\n    start() {\r\n\r\n    },\r\n\r\n    \r\n    generateScore2() {\r\n        this.isGenerating = true;\r\n\r\n    },\r\n    demoGenerateScore() {\r\n        this.loadingLayer.active = false;\r\n        var multiplierPerfect;\r\n        var multiplierConso;\r\n        var platform;\r\n        var perfectScore;\r\n        var consoleScore;\r\n        platform  =   (Math.random() * (1 - 0) + 0);\r\n        if(platform>=0.3){\r\n            platform = 1;\r\n        }\r\n        else{\r\n            platform = 0;\r\n        }\r\n\r\n        // calculate multiplier\r\n        // platform = parseInt(Math.random() * (1 - 0) + 0);\r\n        multiplierPerfect = (Math.random() * (10 - 2) +2);\r\n        multiplierConso = 0.2;\r\n        perfectScore =(this.currentBetting * Math.floor(multiplierPerfect));\r\n        consoleScore = Math.round((this.currentBetting * multiplierConso) * 10) / 10;\r\n        globalData.consoScore = consoleScore;\r\n        globalData.perfectScore = perfectScore;\r\n        globalData.platform = platform;\r\n        this.balanceText.string = (Math.round(globalData.settings.balance * 100) / 100).toString();\r\n        cc.systemEvent.emit(\"Change-Bet\");\r\n    },\r\n    generateScore() {\r\n        this.loadingLayer.active = false;\r\n        this.balanceText.string = (Math.round(globalData.settings.balance * 100) / 100).toString();\r\n        cc.systemEvent.emit(\"Change-Bet\");\r\n\r\n    },\r\n    onDestroy() {\r\n        if (!globalData.isDemo) {\r\n            if (!this.playerDie) {\r\n                var emit_result = {\r\n                    'host_id': globalData.host_id,\r\n                    'access_token': globalData.access_token,\r\n                    'ticket_id': globalData.ticket_id,\r\n                    'result': this.lastBetting,\r\n                    'key': \"Go to home: \" + this.lastBetting,\r\n                    'game_code': globalData.game_code,\r\n                    'description': \"Cancel bet and go to home\",\r\n                    'user_id': globalData.settings.user_id,\r\n                    'api_url':globalData.api_url,\r\n                    'changeBet':true,\r\n\r\n                };\r\n                if(globalData.isEncrypt){\r\n                    emit_result = btoa(JSON.stringify(emit_result));\r\n                }\r\n                globalData.getSocket().emit('send-result', emit_result);\r\n            }\r\n\r\n        }\r\n        else {\r\n            if (!this.playerDie) {\r\n                globalData.settings.balance += this.lastBetting;\r\n            }\r\n        }\r\n    },\r\n\r\n    update(dt) {\r\n        if (this.isGenerating) {\r\n            if (!globalData.isDemo) {\r\n                if (globalData.finishGetData) {\r\n                    //sendresult\r\n                    this.isGenerating = false;\r\n                    globalData.finishGetData = false;\r\n                    this.scheduleOnce(function () {\r\n                        this.generateScore();\r\n\r\n                    }, 0.2);\r\n\r\n                }\r\n            }\r\n            else {\r\n                this.isGenerating = false;\r\n                this.scheduleOnce(function () {\r\n                    this.demoGenerateScore();\r\n\r\n                }, 0.2);\r\n            }\r\n\r\n\r\n        }\r\n\r\n        if (this.generatingBalance) {\r\n            if (!globalData.isDemo) {\r\n                if (globalData.finishGeneratingBalance) {\r\n                    this.insufficient.active = false;\r\n                    var emit_obj = {\r\n                        'host_id': globalData.host_id,\r\n                        'access_token': globalData.access_token,\r\n                        'game_code': 23,\r\n                        'betAmount': this.currentBetting,\r\n                        \"key\": \"Happy Jump bet with these index 1st\",\r\n                        \"description\": \"bet\",\r\n                        \"user_id\": globalData.settings.user_id,\r\n                        'api_url':globalData.api_url,\r\n                        \"requestType\": \"social_addon\",\r\n                        'ticket_id': globalData.ticket_id,\r\n                        \"currentBetSlot\":globalData.currentBetSlot,\r\n                    }\r\n                    if(globalData.isEncrypt){\r\n                        emit_obj = btoa(JSON.stringify(emit_obj));\r\n                    }\r\n                    globalData.getSocket().emit('changeBet', emit_obj);\r\n                    this.generateScore2();\r\n                    this.generatingBalance = false;\r\n                    globalData.finishGeneratingBalance = false;\r\n\r\n                }\r\n            }\r\n\r\n            else {\r\n                this.insufficient.active = false;\r\n                this.generateScore2();\r\n                this.generatingBalance = false;\r\n            }\r\n\r\n        }\r\n\r\n    },\r\n});\r\n"]}